{"remainingRequest":"C:\\Users\\hp\\Desktop\\indee2\\node_modules\\vue-loader\\lib\\index.js??vue-loader-options!C:\\Users\\hp\\Desktop\\indee2\\src\\components\\SwimLane.vue?vue&type=script&lang=js","dependencies":[{"path":"C:\\Users\\hp\\Desktop\\indee2\\src\\components\\SwimLane.vue","mtime":1717264074629},{"path":"C:\\Users\\hp\\Desktop\\indee2\\node_modules\\cache-loader\\dist\\cjs.js","mtime":1717158485435},{"path":"C:\\Users\\hp\\Desktop\\indee2\\node_modules\\babel-loader\\lib\\index.js","mtime":1717158502767},{"path":"C:\\Users\\hp\\Desktop\\indee2\\node_modules\\cache-loader\\dist\\cjs.js","mtime":1717158485435},{"path":"C:\\Users\\hp\\Desktop\\indee2\\node_modules\\vue-loader\\lib\\index.js","mtime":1717158521367}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:DQpleHBvcnQgZGVmYXVsdCB7DQogIG5hbWU6ICdTd2ltTGFuZScsDQogIHByb3BzOiB7DQogICAgbGFuZXM6IHsNCiAgICAgIHR5cGU6IEFycmF5LA0KICAgICAgcmVxdWlyZWQ6IHRydWUNCiAgICB9DQogIH0sDQogIGRhdGEgKCkgew0KICAgIHJldHVybiB7DQogICAgICBpc0RyYWdnaW5nOiBmYWxzZSwNCiAgICAgIGRyYWdTdGFydFg6IDAsDQogICAgICBkcmFnU3RhcnRZOiAwLA0KICAgICAgZHJhZ0xhbmU6IG51bGwNCiAgICB9DQogIH0sDQogIG1ldGhvZHM6IHsNCiAgICBnZXRJbWFnZVBhdGggKGltYWdlVXJsKSB7DQogICAgICAvLyBDaGVjayBpZiB0aGUgVVJMIGlzIGV4dGVybmFsIG9yIGludGVybmFsDQogICAgICBpZiAoaW1hZ2VVcmwuc3RhcnRzV2l0aCgnaHR0cCcpKSB7DQogICAgICAgIHJldHVybiBpbWFnZVVybA0KICAgICAgfSBlbHNlIHsNCiAgICAgICAgcmV0dXJuIHJlcXVpcmUoYEAvYXNzZXRzLyR7aW1hZ2VVcmx9YCkNCiAgICAgIH0NCiAgICB9LA0KICAgIHNjcm9sbExlZnQgKGxhbmVJZCkgew0KICAgICAgY29uc3QgbGFuZSA9IHRoaXMuJHJlZnNbJ2NhcmRzLScgKyBsYW5lSWRdWzBdDQogICAgICBsYW5lLnNjcm9sbEJ5KHsgdG9wOiAwLCBsZWZ0OiAtMjQwLCBiZWhhdmlvcjogJ3Ntb290aCcgfSkNCiAgICB9LA0KICAgIHNjcm9sbFJpZ2h0IChsYW5lSWQpIHsNCiAgICAgIGNvbnN0IGxhbmUgPSB0aGlzLiRyZWZzWydjYXJkcy0nICsgbGFuZUlkXVswXQ0KICAgICAgbGFuZS5zY3JvbGxCeSh7IHRvcDogMCwgbGVmdDogMjQwLCBiZWhhdmlvcjogJ3Ntb290aCcgfSkNCiAgICB9LA0KICAgIHN0YXJ0RHJhZyAoZXZlbnQpIHsNCiAgICAgIGNvbnN0IHRhcmdldExhbmUgPSBldmVudC50YXJnZXQuY2xvc2VzdCgnLmxhbmUnKQ0KICAgICAgaWYgKHRhcmdldExhbmUpIHsNCiAgICAgICAgdGhpcy5pc0RyYWdnaW5nID0gdHJ1ZQ0KICAgICAgICB0aGlzLmRyYWdTdGFydFggPSBldmVudC5jbGllbnRYIC0gdGFyZ2V0TGFuZS5vZmZzZXRMZWZ0DQogICAgICAgIHRoaXMuZHJhZ1N0YXJ0WSA9IGV2ZW50LmNsaWVudFkgLSB0YXJnZXRMYW5lLm9mZnNldFRvcA0KICAgICAgICB0aGlzLmRyYWdMYW5lID0gdGFyZ2V0TGFuZQ0KICAgICAgICBkb2N1bWVudC5hZGRFdmVudExpc3RlbmVyKCdtb3VzZW1vdmUnLCB0aGlzLmRyYWcpDQogICAgICAgIGRvY3VtZW50LmFkZEV2ZW50TGlzdGVuZXIoJ21vdXNldXAnLCB0aGlzLmVuZERyYWcpDQogICAgICB9DQogICAgfSwNCiAgICBkcmFnIChldmVudCkgew0KICAgICAgaWYgKHRoaXMuaXNEcmFnZ2luZyAmJiB0aGlzLmRyYWdMYW5lKSB7DQogICAgICAgIGNvbnN0IHggPSBldmVudC5jbGllbnRYIC0gdGhpcy5kcmFnU3RhcnRYDQogICAgICAgIGNvbnN0IHkgPSBldmVudC5jbGllbnRZIC0gdGhpcy5kcmFnU3RhcnRZDQogICAgICAgIHRoaXMuZHJhZ0xhbmUuc3R5bGUubGVmdCA9IGAke3h9cHhgDQogICAgICAgIHRoaXMuZHJhZ0xhbmUuc3R5bGUudG9wID0gYCR7eX1weGANCiAgICAgIH0NCiAgICB9LA0KICAgIGVuZERyYWcgKCkgew0KICAgICAgaWYgKHRoaXMuaXNEcmFnZ2luZykgew0KICAgICAgICB0aGlzLmlzRHJhZ2dpbmcgPSBmYWxzZQ0KICAgICAgICBkb2N1bWVudC5yZW1vdmVFdmVudExpc3RlbmVyKCdtb3VzZW1vdmUnLCB0aGlzLmRyYWcpDQogICAgICAgIGRvY3VtZW50LnJlbW92ZUV2ZW50TGlzdGVuZXIoJ21vdXNldXAnLCB0aGlzLmVuZERyYWcpDQogICAgICB9DQogICAgfQ0KICB9LA0KICBtb3VudGVkICgpIHsNCiAgICBjb25zdCBsYW5lTWFyZ2luID0gMyAqIDk2IC8vIDMgaW5jaGVzIGluIHBpeGVscyAoYXNzdW1pbmcgOTYgRFBJKQ0KICAgIHRoaXMubGFuZXMuZm9yRWFjaChsYW5lID0+IHsNCiAgICAgIGxhbmUud2lkdGggPSAxMDAwDQogICAgICBsYW5lLmhlaWdodCA9IDQ1MA0KICAgICAgbGFuZS50b3AgPSBsYW5lTWFyZ2luDQogICAgICBsYW5lLmxlZnQgPSBsYW5lTWFyZ2luDQogICAgfSkNCiAgfQ0KfQ0K"},{"version":3,"sources":["SwimLane.vue"],"names":[],"mappings":";AAwBA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA","file":"SwimLane.vue","sourceRoot":"src/components","sourcesContent":["<template>\r\n    <div class=\"swim-lane\" @mousedown=\"startDrag\">\r\n      <div\r\n        v-for=\"lane in lanes\"\r\n        :key=\"lane.id\"\r\n        class=\"lane\"\r\n        :style=\"{ top: lane.top + 'px', left: lane.left + 'px', height: lane.height + 'px', width: lane.width + 'px', position: 'absolute' }\"\r\n      >\r\n        <h2 class=\"lane-title\">{{ lane.title }}</h2>\r\n        <div class=\"lane-content\">\r\n          <button @click=\"scrollLeft(lane.id)\" class=\"scroll-button\">‹</button>\r\n          <div class=\"cards\" :ref=\"'cards-' + lane.id\">\r\n            <div v-for=\"(card, index) in lane.cards\" :key=\"index\" class=\"card\">\r\n              <img :src=\"getImagePath(card.imageUrl)\" alt=\"Card Image\" class=\"card-image\" />\r\n              <div class=\"card-name\">{{ card.name }}</div>\r\n            </div>\r\n          </div>\r\n          <button @click=\"scrollRight(lane.id)\" class=\"scroll-button\">›</button>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  </template>\r\n\r\n<script>\r\nexport default {\r\n  name: 'SwimLane',\r\n  props: {\r\n    lanes: {\r\n      type: Array,\r\n      required: true\r\n    }\r\n  },\r\n  data () {\r\n    return {\r\n      isDragging: false,\r\n      dragStartX: 0,\r\n      dragStartY: 0,\r\n      dragLane: null\r\n    }\r\n  },\r\n  methods: {\r\n    getImagePath (imageUrl) {\r\n      // Check if the URL is external or internal\r\n      if (imageUrl.startsWith('http')) {\r\n        return imageUrl\r\n      } else {\r\n        return require(`@/assets/${imageUrl}`)\r\n      }\r\n    },\r\n    scrollLeft (laneId) {\r\n      const lane = this.$refs['cards-' + laneId][0]\r\n      lane.scrollBy({ top: 0, left: -240, behavior: 'smooth' })\r\n    },\r\n    scrollRight (laneId) {\r\n      const lane = this.$refs['cards-' + laneId][0]\r\n      lane.scrollBy({ top: 0, left: 240, behavior: 'smooth' })\r\n    },\r\n    startDrag (event) {\r\n      const targetLane = event.target.closest('.lane')\r\n      if (targetLane) {\r\n        this.isDragging = true\r\n        this.dragStartX = event.clientX - targetLane.offsetLeft\r\n        this.dragStartY = event.clientY - targetLane.offsetTop\r\n        this.dragLane = targetLane\r\n        document.addEventListener('mousemove', this.drag)\r\n        document.addEventListener('mouseup', this.endDrag)\r\n      }\r\n    },\r\n    drag (event) {\r\n      if (this.isDragging && this.dragLane) {\r\n        const x = event.clientX - this.dragStartX\r\n        const y = event.clientY - this.dragStartY\r\n        this.dragLane.style.left = `${x}px`\r\n        this.dragLane.style.top = `${y}px`\r\n      }\r\n    },\r\n    endDrag () {\r\n      if (this.isDragging) {\r\n        this.isDragging = false\r\n        document.removeEventListener('mousemove', this.drag)\r\n        document.removeEventListener('mouseup', this.endDrag)\r\n      }\r\n    }\r\n  },\r\n  mounted () {\r\n    const laneMargin = 3 * 96 // 3 inches in pixels (assuming 96 DPI)\r\n    this.lanes.forEach(lane => {\r\n      lane.width = 1000\r\n      lane.height = 450\r\n      lane.top = laneMargin\r\n      lane.left = laneMargin\r\n    })\r\n  }\r\n}\r\n</script>\r\n\r\n  <style>\r\n  .swim-lane {\r\n    position: relative;\r\n  }\r\n\r\n  .lane {\r\n    height: 500px;\r\n    border: 1px solid #ccc;\r\n    padding: 10px;\r\n    border-radius: 5px;\r\n    cursor: grab;\r\n    box-sizing: border-box;\r\n    background-color: rgba(0,0,0,0);\r\n  }\r\n\r\n  .lane:active {\r\n    cursor: grabbing;\r\n  }\r\n\r\n  .lane-title {\r\n    font-size: 1.5em;\r\n    margin-bottom: 10px;\r\n  }\r\n\r\n  .lane-content {\r\n    display: flex;\r\n    align-items: center;\r\n    gap: 10px;\r\n    justify-content: center;\r\n  }\r\n\r\n  .cards {\r\n    display: flex;\r\n    overflow-x: auto;\r\n    scroll-behavior: smooth;\r\n    max-width: calc(100% - 80px);\r\n    padding: 5px;\r\n    border: 1px solid #ccc;\r\n    border-radius: 5px;\r\n    transition: border 0.3s ease;\r\n  }\r\n\r\n  .card {\r\n    flex: 0 0 240px;\r\n    height: 336px;\r\n    margin-right: 10px;\r\n    padding: 0px;\r\n    background-color: #f0f0f0;\r\n    border-radius: 5px;\r\n    text-align: center;\r\n    position: relative;\r\n    overflow: hidden;\r\n  }\r\n  .card:hover {\r\n  border: 2px solid #1122dc;\r\n}\r\n\r\n  .card img.card-image {\r\n    width: 100%;\r\n    height: 100%;\r\n    object-fit: cover;\r\n  }\r\n\r\n  .scroll-button {\r\n    background-color: #007bff;\r\n    color: white;\r\n    border: none;\r\n    padding: 10px;\r\n    cursor: pointer;\r\n    border-radius: 5px;\r\n  }\r\n\r\n  .scroll-button:focus {\r\n    outline: 2px solid #0056b3;\r\n  }\r\n  </style>\r\n"]}]}